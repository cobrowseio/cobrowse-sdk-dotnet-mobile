<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net8.0-android;net8.0-ios;</TargetFrameworks>
    <UseMaui>false</UseMaui>
    <SingleProject>true</SingleProject>
    <ImplicitUsings>false</ImplicitUsings>
    <Nullable>enable</Nullable>

    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>

    <Title>Cobrowse.IO</Title>
    <Product>Cobrowse.IO</Product>
    <RootNamespace>Cobrowse.IO</RootNamespace>
    <AssemblyName>Cobrowse.IO</AssemblyName>
    <Description>Cobrowse.io - .NET iOS and Android SDK</Description>
    <Company>Cobrowse.io LLC</Company>
    <Version>4.0.2</Version>
    <Configurations>Release;Debug</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-ios|AnyCPU'">
    <CreatePackage>false</CreatePackage>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <CreatePackage>false</CreatePackage>
  </PropertyGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net8.0-android')) != true">
    <Compile Remove="Platforms\Android\*.cs" />
    <None Include="Platforms\Android\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net8.0-ios')) != true">
    <Compile Remove="Platforms\iOS\*.cs" />
    <None Include="Platforms\iOS\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <Target Name="FixMauiBug10150" AfterTargets="Build" Condition="'$(TargetFramework)'=='net8.0-android'">
    <!--
    If a MAUI app (like `MauiSample`) consumes a MAUI source project (like `CobrowseIO`)
    it looks for the Android-specific DLLs in the wrong place.
    The workaround MSBuild target copies the built output into that "incorrect" directory.
    https://github.com/dotnet/maui/issues/10150
    https://github.com/dotnet/maui/issues/10200
    -->
    <Message Importance="high" Text="FixMauiBug10150:" />
    <ItemGroup>
      <AndroidBuildOutputs Include="$(ProjectDir)$(OutDir)\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(AndroidBuildOutputs)" DestinationFolder="$(ProjectDir)$(OutDir)android-x64" />
    <Copy SourceFiles="@(AndroidBuildOutputs)" DestinationFolder="$(ProjectDir)$(OutDir)android-x86" />
    <Copy SourceFiles="@(AndroidBuildOutputs)" DestinationFolder="$(ProjectDir)$(OutDir)android-arm64" />
  </Target>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
    <ProjectReference Include="..\..\Android\NumbersJava.Android\NumbersJava.Android.csproj" />
    <ProjectReference Include="..\..\Android\CborJava.Android\CborJava.Android.csproj" />
    <ProjectReference Include="..\..\Android\CobrowseIO.Android\CobrowseIO.Android.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
    <ProjectReference Include="..\..\iOS\CobrowseIO.iOS\CobrowseIO.iOS.csproj" />
  </ItemGroup>

</Project>
